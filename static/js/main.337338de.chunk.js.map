{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","isModalOpen","openModal","className","map","todo","id","completed","cs","title","type","onClick","TodoFilter","category","query","onCategoryChange","onQueryChange","value","onChange","event","target","handleCategorySelect","placeholder","preventDefault","handleQueryChange","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","currentTodo","closeModal","useState","user","setUser","isUserLoading","setIsUserLoading","loadUser","a","userId","currentUser","useEffect","href","email","name","App","setTodos","isLoading","setIsLoading","setCategory","setQuery","setIsModalOpen","setCurrentTodo","loadTodos","todosFromServer","visibleTodos","allTodos","filteredTodos","filter","toLowerCase","includes","filterTodos","newCategory","newQuery","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.337338de.chunk.js","sourcesContent":["/* eslint-disable */\n\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\nimport cs from 'classnames';\n\ninterface Props {\n  todos: Todo[];\n  isModalOpen: Boolean;\n  openModal: (todo: Todo) => void;\n}\n\nexport const TodoList: React.FC<Props> = ({ todos, isModalOpen, openModal }) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map((todo: Todo) => (\n          <tr key={todo.id} data-cy=\"todo\">\n            <td className=\"is-vcentered\">\n              {todo.id}\n            </td>\n\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={cs(\n                  {\n                    'has-text-danger': !todo.completed,\n                    'has-text-success': todo.completed,\n                  }\n                )}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => openModal(todo)}\n              >\n                {isModalOpen\n                  ? (<span className=\"icon\">\n                    <i className=\"far fa-eye-slash\" />\n                  </span>)\n                  : (<span className=\"icon\">\n                    <i className=\"far fa-eye\" />\n                  </span>)}\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  )\n}\n","import { ChangeEvent } from 'react';\n\ninterface Props {\n  category: string,\n  query: string,\n  onCategoryChange: (newCategory: string) => void,\n  onQueryChange: (newQuery: string) => void;\n}\n\nexport const TodoFilter: React.FC<Props> = ({\n  category,\n  query,\n  onCategoryChange,\n  onQueryChange,\n}) => {\n  const handleCategorySelect = (event: ChangeEvent<HTMLSelectElement>) => {\n    onCategoryChange(event.target.value);\n  };\n\n  const handleQueryChange = (event: ChangeEvent<HTMLInputElement>) => {\n    event.preventDefault();\n\n    onQueryChange(event.target.value);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={category}\n            onChange={(event) => handleCategorySelect(event)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => handleQueryChange(event)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => onQueryChange('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Todo } from '../../types/Todo';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\ninterface Props {\n  currentTodo: Todo;\n  closeModal: () => void;\n}\n\nexport const TodoModal: React.FC<Props> = ({ currentTodo, closeModal }) => {\n  const [user, setUser] = useState<User>();\n  const [isUserLoading, setIsUserLoading] = useState(false);\n\n  const loadUser = async () => {\n    setIsUserLoading(true);\n    const currentUser = await getUser(currentTodo.userId);\n\n    setIsUserLoading(false);\n    setUser(currentUser);\n  };\n\n  useEffect(() => {\n    loadUser();\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isUserLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${currentTodo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => closeModal()}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {currentTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              {currentTodo.completed\n                ? (<strong className=\"has-text-success\">Done</strong>)\n                : (<strong className=\"has-text-danger\">Planned</strong>)}\n              {' by '}\n              <a href={`mailto:${user?.email}`}>\n                { user?.name }\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { Loader } from './components/Loader';\nimport { TodoModal } from './components/TodoModal';\n\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [category, setCategory] = useState('all');\n  const [query, setQuery] = useState('');\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [currentTodo, setCurrentTodo] = useState(todos[0]);\n\n  const openModal = (todo: Todo) => {\n    setCurrentTodo(todo);\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  const loadTodos = async () => {\n    setIsLoading(true);\n    const todosFromServer = await getTodos();\n\n    setIsLoading(false);\n    setTodos(todosFromServer);\n  };\n\n  const onCategoryChange = (newCategory: string) => {\n    setCategory(newCategory);\n  };\n\n  const onQueryChange = (newQuery: string) => {\n    setQuery(newQuery);\n  };\n\n  useEffect(() => {\n    loadTodos();\n  }, []);\n\n  const filterTodos = (allTodos: Todo[]) => {\n    let filteredTodos = allTodos;\n\n    switch (category) {\n      case 'completed':\n        filteredTodos = allTodos.filter((todo) => todo.completed);\n        break;\n      case 'active':\n        filteredTodos = allTodos.filter((todo) => !todo.completed);\n        break;\n      case 'all':\n      default:\n        filteredTodos = allTodos;\n    }\n\n    if (query !== '') {\n      filteredTodos = filteredTodos.filter((todo) => todo.title.toLowerCase().includes(query.toLowerCase()));\n    }\n\n    return filteredTodos;\n  };\n\n  const visibleTodos = filterTodos(todos);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                onCategoryChange={onCategoryChange}\n                onQueryChange={onQueryChange}\n                category={category}\n                query={query}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={visibleTodos}\n                    openModal={openModal}\n                    isModalOpen={isModalOpen}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {isModalOpen\n      && (\n        <TodoModal\n          closeModal={closeModal}\n          currentTodo={currentTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}